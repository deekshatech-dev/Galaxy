@using GPSMap.Data;
@model GPSMap.Models.KPIChartDataModel
@{
    ViewBag.Title = "Home Page";
}

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default" style="margin-top:10px;">
            <div class="panel-body form-inline">
                <div class="form-group">
                    <label for="exampleInputName2">Select KPI</label>
                    <select id="KPI" multiple="multiple" required name="KPI">
                        <option>Select KPI</option>
                        @if (Model.KPIValues != null)
                        {
                            foreach (var item in Model.KPIValues)
                            {
                                if (item.Text != null)
                                {
                                    <option value="@item.Value">
                                        @item.Text
                                    </option>
                                }
                            }
                        }
                    </select>
                </div>
                <div class="form-group">
                    <div class='input-group date' id='p-for'>
                        @Html.TextBoxFor(x => x.SearchModel.ForDate, new { placeholder = "Period From", @class = "form-control", autocomplete = "off" })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
                <div class="form-group">
                    <label for="exampleInputName2">Select Trend</label>
                    <select name="Trend" id="Trend" class="form-control">
                        <option value="Monthly">Monthly</option>
                        <option value="Daily">Daily</option>
                    </select>
                </div>

                <input name="ShowSeparate" id="ShowSeparate" type="checkbox" checked data-toggle="toggle" data-on="Show Seperate" data-off="Show Single" data-onstyle="success" data-offstyle="warning">

                <button id="generatechart" class="btn btn-primary btn-sm" onclick="GetChartData()">Generate Chart</button>
            </div>
        </div>
    </div>
    
</div>
<div class="row">
    <div id="chart-container">

    </div>
</div>
@section scripts{
    <script>

        window.chartColors = [
            'rgb(255, 99, 132)',
            'rgb(255, 159, 64)',
            'rgb(255, 205, 86)',
            'rgb(75, 192, 192)',
            'rgb(54, 162, 235)',
            'rgb(153, 102, 255)',
            'rgb(201, 203, 207)'
        ];

        var getRandomChart = function () {
            var max = window.chartColors.length;
            return window.chartColors[Math.floor(Math.random() * Math.floor(max))];
        }

        $('#KPI').multiselect({
            includeSelectAllOption: false,
            numberDisplayed: 1
        });

        $('#p-for').datetimepicker({
            format: 'DD/MM/YYYY',
            showClear: true
        });

    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js"
            integrity="sha256-R4pqcOYV8lt7snxMQO/HSbVCFRPMdrhAFMH+vr9giYI=" crossorigin="anonymous"></script>
    <script>
        function isValidate() {
            if ($("#KPI").val() == "" || $("#KPI").val() == []) {
                toastr.error("Please select at least one KPI.");
                return false;
            }
            if ($("#Trend").val() == "") {
                toastr.error("Please select chart type.");
                return false;
            }
            return true;
        };

        function GetChartData() {
            if (isValidate()) {
                $.blockUI();

                $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetChartData", "Ericsson")',
                        data: JSON.stringify({
                            "Trend": $("#Trend").val(),
                            "KPIName": $("#KPI").val(),
                            "Date": $('#p-for').data('date')
                        }),
                        contentType: "application/json",
                        dataType: "json",
                        success: function(chData) {
                            bindChart(chData);
                        },
                        "error": function(data) {
                            alert("Some Error Occured!");
                        }
                    })
                    .always(function() {
                        $.unblockUI();
                    });
                return false;
            } else {
                return false;
            }
        };

        var generateChart = function(ctx, data) {

            // prepare data

            var datasets = [];
            var chartLabels;
            if (Array.isArray(data)) {
                chartLabels = data[0].ChartData.Labels;
                $.each(data,
                    function(index, value) {
                        var chartDatasets = {
                            label: value.KPI,
                            data: value.ChartData.ChartData,
                            borderColor: getRandomChart(),
                            fill: false
                        };
                        datasets.push(chartDatasets);
                    });
            } else {
                chartLabels = data.ChartData.Labels;
                var chartDatasets = {
                    label: data.KPI,
                    data: data.ChartData.ChartData,
                    borderColor: getRandomChart(),
                    fill: false
                };
                datasets.push(chartDatasets);
            }

            var myChart = new Chart(ctx,
                {
                    type: 'line',
                    data: {
                        labels: chartLabels, // chartLabels
                        datasets: datasets
                    },
                    options: {
                        scales: {
                            xAxes: [
                                {
                                    display: true,
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Dates | Hours'
                                    }
                                }
                            ],
                            yAxes: [
                                {
                                    display: true,
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'KPI Value'
                                    }
                                }
                            ]
                        }
                    }
                });
        };

        var bindChart = function (chart) {

            $('#chart-container').empty();
            var createMultiple = false;

            if ($('#ShowSeparate').is(":checked") && chart.length > 1) {
                createMultiple = true;
            }

            var newCanvas;
            var chartId;

            var panel;
            var panelid;
            var ctx;
            if (createMultiple)
            {
                for (var i = 0; i < chart.length; i++)
                {
                    chartId = 'myChart' + i;
                    newCanvas = $('<canvas/>', { 'id': chartId });

                    panel = `<div class="col-md-6" >
                                <div class="panel panel-default" id="panel-container-${chartId}">                                     
                                     <div class="panel-body"></div>
                                </div>
                            </div>`;

                    $('#chart-container').append(panel);
                    panelid = `#panel-container-${chartId} .panel-body`;
                    $(panelid).html(newCanvas);
                    ctx = document.getElementById(chartId).getContext('2d');
                    generateChart(ctx, chart[i]);
                }
            } else {
                // plot single chart
                chartId = 'myChart';
                newCanvas = $('<canvas/>', { 'id': chartId });

                panel = `<div class="col-md-12" >
                                <div class="panel panel-default" id="panel-container-${chartId}">                                     
                                     <div class="panel-body"></div>
                                </div>
                            </div>`;

                $('#chart-container').append(panel);
                panelid = `#panel-container-${chartId} .panel-body`;
                $(panelid).html(newCanvas);
                ctx = document.getElementById('myChart').getContext('2d');
                generateChart(ctx, chart);
            }

        };

    </script>
}